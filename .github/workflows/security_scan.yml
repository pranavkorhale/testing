name: Mobile App Security Scan

on:
  push:
    branches: [main, develop]
    paths:
      - '**/*.apk'
  workflow_dispatch:
    inputs:
      apk_path:
        description: 'Path to APK file in the repository'
        required: true
        default: 'first.apk'

jobs:
  scan:
    name: MobSF Scan
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      mobsf:
        image: opensecurity/mobile-security-framework-mobsf:latest
        ports:
          - 8000:8000
        options: --health-cmd "curl -f http://localhost:8000/ || exit 1" --health-interval 10s --health-timeout 5s --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install requests

      - name: Wait for MobSF to be ready
        run: |
          echo "Waiting for MobSF to be ready..."
          for i in {1..20}; do
            if curl -s http://localhost:8000/ >/dev/null; then
              echo "MobSF is ready."
              exit 0
            fi
            echo "Attempt $i: MobSF not ready yet..."
            sleep 5
          done
          echo "::error::MobSF did not start in time"
          exit 1

      - name: Run MobSF Scan
        run: |
          echo "Running MobSF scan..."
          API_KEY="${{ secrets.MOBSF_API_KEY }}"
          if [ -z "$API_KEY" ]; then
            echo "::error::MobSF API key not found in secrets"
            exit 1
          fi

          APK_PATH="${{ github.event.inputs.apk_path }}"
          if [ ! -f "$APK_PATH" ]; then
            echo "::error::APK file not found at path: $APK_PATH"
            exit 1
          fi

          # Upload the APK
          echo "Uploading $APK_PATH"
          RESPONSE=$(curl -s -X POST "http://localhost:8000/api/v1/upload" \
            -H "Authorization: $API_KEY" \
            -F "file=@$APK_PATH")

          HASH=$(echo $RESPONSE | jq -r '.hash')
          if [ "$HASH" == "null" ] || [ -z "$HASH" ]; then
            echo "::error::Upload failed: $RESPONSE"
            exit 1
          fi

          echo "APK hash: $HASH"

          # Start scan
          curl -s -X POST "http://localhost:8000/api/v1/scan" \
            -H "Authorization: $API_KEY" \
            -d "hash=$HASH&scan_type=apk"

          echo "Waiting for scan to finish..."
          for i in {1..20}; do
            STATUS=$(curl -s "http://localhost:8000/api/v1/scan_status?hash=$HASH" -H "Authorization: $API_KEY" | jq -r '.status')
            if [ "$STATUS" == "completed" ]; then
              echo "Scan completed."
              break
            fi
            echo "Scan not ready yet... ($i)"
            sleep 10
          done

          # Download report
          curl -s -X GET "http://localhost:8000/api/v1/report_json?hash=$HASH" \
            -H "Authorization: $API_KEY" > mobsf_report.json

      - name: Upload scan report
        uses: actions/upload-artifact@v4
        with:
          name: mobsf-report
          path: mobsf_report.json
